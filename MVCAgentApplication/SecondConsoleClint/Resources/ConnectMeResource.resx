<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AgentNotConnected" xml:space="preserve">
    <value>Agent not connected</value>
  </data>
  <data name="AgentSetupWizard2" xml:space="preserve">
    <value>AgentSetupWizard2</value>
  </data>
  <data name="AllFieldsMustBeCorrect" xml:space="preserve">
    <value>All fields must be correct!</value>
  </data>
  <data name="ClickToLogin" xml:space="preserve">
    <value>Click to Login</value>
  </data>
  <data name="ClickToLogout" xml:space="preserve">
    <value>Click to Logout</value>
  </data>
  <data name="ConnectedToHUB" xml:space="preserve">
    <value>Connected To HUB.</value>
  </data>
  <data name="FiftyCharactersOnly" xml:space="preserve">
    <value>Fifty characters only!</value>
  </data>
  <data name="LoggedAgentIsDisconnected" xml:space="preserve">
    <value>Logged agent is disconnected</value>
  </data>
  <data name="LogIn" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LogOut" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="MaximumFiveNumericDigitsOnly" xml:space="preserve">
    <value>Maximum five numeric digits only!</value>
  </data>
  <data name="NotConnectedMsg" xml:space="preserve">
    <value>Not connected!</value>
  </data>
  <data name="NotConnectedToHUB" xml:space="preserve">
    <value>Not Connected To HUB.</value>
  </data>
  <data name="OneInstanceAlreadyRunning" xml:space="preserve">
    <value>One instance of application is already running!</value>
  </data>
  <data name="ProvideAgentName" xml:space="preserve">
    <value>Provide AgentName!</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome </value>
  </data>
  <data name="AgentLoggedOut" xml:space="preserve">
    <value>-AgentLoggedOut.</value>
  </data>
  <data name="CloseBracket" xml:space="preserve">
    <value>)</value>
  </data>
  <data name="For" xml:space="preserve">
    <value>For </value>
  </data>
  <data name="InfoCustomerId" xml:space="preserve">
    <value> ,CustomerId: </value>
  </data>
  <data name="InfoExtensionNo" xml:space="preserve">
    <value> ,ExtensionNo: </value>
  </data>
  <data name="InfoSuccessfullyConnectedAgent" xml:space="preserve">
    <value>Successfully Connected Agent: </value>
  </data>
  <data name="InvokedHubMethodApiRequestUpdation" xml:space="preserve">
    <value>Invoked HubMethod ApiRequestUpdation(</value>
  </data>
  <data name="LoggedOutAt" xml:space="preserve">
    <value> Logged Out at. </value>
  </data>
  <data name="LoggerAgentCannotExitProperlyError" xml:space="preserve">
    <value>Agent can't exit properly. Error: </value>
  </data>
  <data name="LoggerAgentFacedErrorDuringLoggingOutError" xml:space="preserve">
    <value>Agent faced error during logging out. Error: </value>
  </data>
  <data name="LoggerCheckRecordExistsOrNotMethodError" xml:space="preserve">
    <value>CheckRecordExistsOrNot method Error: </value>
  </data>
  <data name="LoggerConnectionTaskIsFaultedError" xml:space="preserve">
    <value>Connection task is faulted. Error: </value>
  </data>
  <data name="LoggerErrorAtConnectToHubError" xml:space="preserve">
    <value>Error at ConnectToHub. Error: </value>
  </data>
  <data name="LoggerErrorAtReadingAgentsCredentialsFromConfigFileError" xml:space="preserve">
    <value>Error at reading Agents credentials from config file. Error: </value>
  </data>
  <data name="LoggerMainMethodError" xml:space="preserve">
    <value>Main Method Error: </value>
  </data>
  <data name="LoggerPleaseLoginIntoTheApplicationToTestConnectionError" xml:space="preserve">
    <value>Please Login into the application to test connection. Error: </value>
  </data>
  <data name="LoggerProblemAtAgentLoginError" xml:space="preserve">
    <value>Problem at Agent Login. Error: </value>
  </data>
  <data name="LoggerProblemAtCreatingSpecificAgentError" xml:space="preserve">
    <value>Problem at Creating SpecificAgent. Error: </value>
  </data>
  <data name="LoggerProblemAtLoginLogoutContextMenuClickError" xml:space="preserve">
    <value>Problem at LoginLogout context menu click. Error: </value>
  </data>
  <data name="LoggerProblemAtPushToUniqueClientError" xml:space="preserve">
    <value>Problem at Push to unique client. Error: </value>
  </data>
  <data name="LoggerProblemInSetPropertyOfNotifyError" xml:space="preserve">
    <value>Problem in Set_property_of_Notify. Error: </value>
  </data>
  <data name="LoggerProblemOnClickingStopAppError" xml:space="preserve">
    <value>Problem on clicking Stop App. Error: </value>
  </data>
  <data name="LoggerProblemOnClosingAgentCredentialFormError" xml:space="preserve">
    <value>Problem on closing Agent Credential Form. Error: </value>
  </data>
  <data name="LoggerStoppedApplcationAt" xml:space="preserve">
    <value>Stopped Applcation at: </value>
  </data>
  <data name="PleaseLoginIntoTheApplicationToTestConnection" xml:space="preserve">
    <value>Please Login into the application to test connection.</value>
  </data>
  <data name="SeperationLine" xml:space="preserve">
    <value>-----------------------------------------------</value>
  </data>
  <data name="SuccessfullyConnected" xml:space="preserve">
    <value>Successfully connected </value>
  </data>
  <data name="SuccessfullyOpenedUrl" xml:space="preserve">
    <value>Successfully opened url </value>
  </data>
  <data name="ThereWasAnErrorOpeningTheConnection" xml:space="preserve">
    <value>There was an error opening the connection.</value>
  </data>
  <data name="WithServer" xml:space="preserve">
    <value> with server.</value>
  </data>
</root>